TODO

- Set the system up for all instances. To do this you would have to make sure that all instance databases are set up for SSL, meaning their 
config files are set up properly and that they have the signed certificate, key, and root certificate path set up. The database 
connection info has to be added to the database connection info table in the database warehouse

- Populate the job table in the database with the real jobs you want to run, such as the billing job. Compare it to an actual report to see 
if you have the desired results

- Place the database warehouse on a VM that is not on your local system. Make the project executable from a jar



TODO for CSV system

- System has to be able to read a list of select statement from a table. This statement defines what data from the database warehouse will
be put in the report. There also needs to be some kind of variable that defines which instances the data is pulled from. So for example is 
it a single instance, all instances, or a group of instances

- You can likely generate the csv by calling a function in postgres FYI. 
	Research - Ben
	- http://stackoverflow.com/questions/1120109/export-postgres-table-to-csv-file-with-headings
	-http://stackoverflow.com/questions/1517635/save-pl-pgsql-output-from-postgresql-to-a-csv-file
	-http://www.postgresql.org/docs/current/interactive/sql-copy.html
	-Dave M
	-you can ask dave brown for the net solution billing report if you want to see a sample of how the csv report looks like
	-http://www.gistutor.com/postgresqlpostgis/10-intermediate-postgresqlpostgis-tutorials/39-how-to-import-or-export-a-csv-file-using-postgresql-copy-to-and-copy-from-queries.html
- There should be a UI, maybe a web UI, that allows someone to easily choose a csv report type that they want. Either from a list of reports
that already exist or from the Web UI be able to define what kind of report you actually want. They click ok and then it downloads that 
report for them

- 


